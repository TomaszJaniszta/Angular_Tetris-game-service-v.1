{
  "name": "angular-sem1-zal",
  "version": "0.0.0",
  "scripts": {
    "ng": "ng",
    "start": "ng serve",
    "build": "ng build",
    "watch": "ng build --watch --configuration development",
    "test": "ng test"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "~13.0.0",
    "@angular/common": "~13.0.0",
    "@angular/compiler": "~13.0.0",
    "@angular/core": "~13.0.0",
    "@angular/forms": "~13.0.0",
    "@angular/platform-browser": "~13.0.0",
    "@angular/platform-browser-dynamic": "~13.0.0",
    "@angular/router": "~13.0.0",
    "ngx-tetris": "^1.0.0",
    "rxjs": "~7.4.0",
    "tslib": "^2.3.0",
    "zone.js": "~0.11.4"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "~13.0.1",
    "@angular/cli": "~13.0.1",
    "@angular/compiler-cli": "~13.0.0",
    "@types/jasmine": "~3.10.0",
    "@types/node": "^12.11.1",
    "jasmine-core": "~3.10.0",
    "karma": "~6.3.0",
    "karma-chrome-launcher": "~3.1.0",
    "karma-coverage": "~2.0.3",
    "karma-jasmine": "~4.0.0",
    "karma-jasmine-html-reporter": "~1.7.0",
    "typescript": "~4.4.3"
  },
  "description": "2 versions of the application.\r Aplication is simulation of service with tetris game with different functionalities.\r # Version 1. \r \tI. Intro page with intro text and player form\r \t\t* Form with two inputs: player name, player email (validation)\r   \t\t* Start game button - upon clicking 'start' checking name and email, and notify player, if name and email are fine then store this data and moving to the game page\r \tII. Game page\r \t\t* personalized welcome message (with player name)\r \t\t* 'exit game' button which move player to intro page\r \t\t* integrated ngx-tetris game\r \t\t* indication of the game status (ready, started, paused...)\r \t\t* points counting mechanism (each cleared line counts)\r \t\t* displaying current amount of points\r \t\t* displaying time spent wile playing\r \t\t* 'gameplay history' with all actions\r \t\t\t- timestamp\r \t\t\t- action name (player started the game, paused, line cleared...)\r \t\t\t- filterable by event type (ie. show only 'line cleared' events)\r \t\t\t- sortable by timestamp (latest first or oldest first)",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/TomaszJaniszta/Angular_Tetris-game-service-v.1.git"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/TomaszJaniszta/Angular_Tetris-game-service-v.1/issues"
  },
  "homepage": "https://github.com/TomaszJaniszta/Angular_Tetris-game-service-v.1#readme"
}
